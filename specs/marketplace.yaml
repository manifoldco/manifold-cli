swagger: "2.0"
info:
  title: Marketplace API
  description: |
    Request and monitor resource provisioning, deprovisioning, and resizing
    operations
  version: 1.0.0
host: api.marketplace.manifold.co
schemes:
- https
produces:
- application/json
consumes:
- application/json
securityDefinitions:
  jwtRequired:
    type: apiKey
    name: Authorization
    in: header
security:
- jwtRequired: []
responses:
  BadRequest:
    description: Invalid Request
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Invalid Auth Token
    schema:
      $ref: '#/definitions/Error'
  Forbidden:
    description: Insufficient permission to perform the action
    schema: { $ref: '#/definitions/Error' }
  Conflict:
    description: Conflict during patch
    schema: { $ref: '#/definitions/Error' }
  InternalServerError:
    description: Server Error
    schema:
      $ref: '#/definitions/Error'
  Unexpected:
    description: Unexpected Error
    schema:
      $ref: '#/definitions/Error'
basePath: /v1
paths:
  /resources/:
    get:
      summary: List all provisioned resources
      tags:
      - Resource
      parameters:
      - name: team_id
        in: query
        description: |
          ID of the Team to filter Resources by, stored as a
          base32 encoded 18 byte identifier.
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
        required: false
      - name: product_id
        in: query
        description: |
          ID of the Product to filter Resources by, stored as a
          base32 encoded 18 byte identifier.
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
        required: false
      responses:
        200:
          description: List of provisioned resources
          schema:
            type: array
            items:
              $ref: '#/definitions/Resource'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Unexpected'
  /resources/{id}:
    get:
      summary: Retrieve a resource
      parameters:
      - name: id
        in: path
        description: |
          ID of the Resource to lookup, stored as a base32 encoded 18 byte
          identifier.
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      tags:
      - Resource
      responses:
        200:
          description: A resource.
          schema:
            $ref: '#/definitions/Resource'
        404:
          description: No resource with the given ID exists.
          schema:
            $ref: '#/definitions/Error'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Unexpected'
    patch:
      summary: |
        Update a resource name or other property that doesn't require
        communication with the provider.
      parameters:
      - name: id
        in: path
        description: |
          ID of the Resource to lookup, stored as a base32 encoded 18 byte
          identifier.
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      - name: body
        in: body
        description: Resource update request
        required: true
        schema:
          $ref: '#/definitions/PublicUpdateResource'
      tags:
      - Resource
      responses:
        200:
          description: An updated resource object.
          schema:
            $ref: '#/definitions/Resource'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Unexpected'
  /resources/{id}/config:
    get:
      summary: Get the custom config for a resource
      description: |
        Get the custom config for a resource. Only resources with a `source` of
        `custom` have custom configs. Requesting the custom config for a resource
        of any other source will result in a `400` response.
      tags:
      - Credential
      parameters:
      - name: id
        in: path
        description: |
          ID of the Resource to retrieve custom config for, stored as a
          base32 encoded 18 byte identifier.
        required: true
        format: base32ID
        type: string
      responses:
        200:
          description: The custom config
          schema:
            type: object
            description: |
              Map of configuration variable names to values. Names must match
              `^[a-zA-Z][a-zA-Z0-9_]{0,999}$`.
            additionalProperties:
              type: string
        404:
          description: No resource with the given ID exists.
          schema:
            $ref: '#/definitions/Error'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Unexpected'
    patch:
      summary: Modify the custom config for a resource
      description: |
        Modify the custom config for a resource. Only resources with a `source`
        of `custom` have custom configs. Attempting to modify the custom config
        for a resource of any other source will result in a `400` response.

        Custom config is modified via JSON merge patching. To change or modify a
        key, include that key with the new value. To remove a key, include that
        key in the request with a null value. Any keys not included in the
        request are ignored and left unchanged.
      tags:
      - Credential
      parameters:
      - name: id
        in: path
        description: |
          ID of the Resource to retrieve custom config for, stored as a
          base32 encoded 18 byte identifier.
        required: true
        format: base32ID
        type: string
      - name: body
        in: body
        description: |
          The JSON merge patch request for updating this resource's custom
          config. It is a map of configuration variable names to values. Names
          must match `^[a-zA-Z][a-zA-Z0-9_]{0,999}$`. Values must either be
          strings, or null.
        required: true
        schema:
          $ref: '#/definitions/ConfigPatch'
      responses:
        200:
          description: The updated custom config
          schema:
            type: object
            description: |
              Map of configuration variable names to values. Names must match
              `^[a-zA-Z][a-zA-Z0-9_]{0,999}$`.
            additionalProperties:
              type: string
        404:
          description: No resource with the given ID exists.
          schema:
            $ref: '#/definitions/Error'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          description: |
            Someone else has modified the custom configuration at the same
            time.
          schema:
            $ref: '#/definitions/Error'
        500:
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Unexpected'
  /credentials:
    get:
      summary: List credentials
      parameters:
      - name: resource_id
        in: query
        description: |
          ID of the Resource to filter Credentials by, stored as a
          base32 encoded 18 byte identifier.
        collectionFormat: multi
        type: array
        required: true
        items:
          format: base32ID
          type: string
      tags:
      - Credential
      responses:
        200:
          description: List of Credentials
          schema:
            type: array
            items:
              $ref: '#/definitions/Credential'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/InternalServerError'
        default:
          $ref: '#/responses/Unexpected'
  /projects:
    get:
      summary: List all provisioned projects
      tags:
        - Project
      parameters:
        - name: team_id
          in: query
          description: |
            ID of the Team to filter projects by, stored as a
            base32 encoded 18 byte identifier.
          type: string
          pattern: '^[0-9abcdefghjkmnpqrtuvwxyz]{29}$'
          format: base32ID
          required: false
      responses:
        200:
          description: List of projects
          schema:
            type: array
            items: { $ref: '#/definitions/Project' }
        400: { $ref: "#/responses/BadRequest" }
        401: { $ref: "#/responses/Unauthorized" }
        500: { $ref: "#/responses/InternalServerError" }
        default: { $ref: "#/responses/Unexpected" }
    post:
      summary: Create a new project
      tags:
        - Project
      parameters:
        - name: body
          in: body
          description: |
            Project create request.
          required: true
          schema: { $ref: '#/definitions/CreateProject' }
      responses:
        201:
          description: Complete project object
          schema: { $ref: '#/definitions/Project' }
        400:
          description: Validation failed for request.
          schema: { $ref: '#/definitions/Error' }
        401:
          description: Authentication failed for the request.
          schema: { $ref: '#/definitions/Error' }
        409:
          description: A project with this label already exists.
          schema: { $ref: '#/definitions/Error' }
        500:
          description: Request failed due to an internal server error.
          schema: { $ref: '#/definitions/Error' }
        default:
          description: Unexpected error
          schema: { $ref: '#/definitions/Error' }
  /projects/{id}:
    get:
      summary: Retrieve a project by its ID
      parameters:
        - name: id
          in: path
          description: |
            ID of the project to retrieve, stored as a base32 encoded 18 byte
            identifier.
          required: true
          type: string
          pattern: '^[0-9abcdefghjkmnpqrtuvwxyz]{29}$'
          format: base32ID
      tags:
        - Project
      responses:
        200:
          description: A project.
          schema: { $ref: '#/definitions/Project' }
        404:
          description: No proejct with the given ID exists.
          schema: { $ref: '#/definitions/Error' }
        401: { $ref: "#/responses/Unauthorized" }
        403: { $ref: "#/responses/Forbidden" }
        500: { $ref: "#/responses/InternalServerError" }
        default: { $ref: "#/responses/Unexpected" }
    patch:
      summary: Update a project's name or description.
      parameters:
        - name: id
          in: path
          description: |
            ID of the project to look up, stored as a base32 encoded 18 byte
            identifier.
          required: true
          type: string
          pattern: '^[0-9abcdefghjkmnpqrtuvwxyz]{29}$'
          format: base32ID
        - name: body
          in: body
          description: Project update request
          required: true
          schema: { $ref: '#/definitions/PublicUpdateProject' }
      tags:
        - Project
      responses:
        200:
          description: An updated project object.
          schema: { $ref: '#/definitions/Project' }
        400: { $ref: "#/responses/BadRequest" }
        401: { $ref: "#/responses/Unauthorized" }
        403: { $ref: "#/responses/Forbidden" }
        409: { $ref: "#/responses/Conflict" }
        500: { $ref: "#/responses/InternalServerError" }
        default: { $ref: "#/responses/Unexpected" }

definitions:
  ID:
    type: string
    description: A base32 encoded 18 byte identifier.
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  OptionalID:
    type: string
    description: A base32 encoded 18 byte identifier.
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-nullable: true
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Label:
    type: string
    description: A machine readable unique label, which is url safe.
    pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
    x-go-type:
      type: Label
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Name:
    type: string
    description: A name of an entity which is displayed to a human.
    pattern: ^[a-zA-Z][a-z0-9A-Z \-]{2,128}$
    x-go-type:
      type: Name
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Error:
    type: object
    properties:
      type:
        type: string
        description: The error type
        enum:
        - bad_request
        - not_found
        - unauthorized
        - conflict
        - internal
      message:
        type: array
        description: Explanation of the errors
        items:
          type: string
    x-go-type:
      type: Error
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Resource:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      type:
        type: string
        enum:
        - resource
      version:
        type: integer
        enum:
        - 1
      body:
        type: object
        properties:
          name:
            $ref: '#/definitions/Name'
          label:
            $ref: '#/definitions/Label'
          app_name:
            $ref: '#/definitions/Name'
          user_id:
            $ref: '#/definitions/OptionalID'
          team_id:
            $ref: '#/definitions/OptionalID'
          product_id:
            $ref: '#/definitions/OptionalID'
          plan_id:
            $ref: '#/definitions/OptionalID'
          region_id:
            $ref: '#/definitions/OptionalID'
          source:
            type: string
            enum:
            - catalog
            - custom
            default: catalog
          created_at:
            type: string
            format: datetime
          updated_at:
            type: string
            format: datetime
        additionalProperties: false
        required:
        - name
        - label
        - source
        - created_at
        - updated_at
    additionalProperties: false
    required:
    - id
    - type
    - version
    - body
  PublicUpdateResource:
    type: object
    description: Shape of request used to update a resource through a public api
    properties:
      body:
        type: object
        properties:
          name:
            $ref: '#/definitions/Name'
          label:
            $ref: '#/definitions/Label'
          app_name:
            x-nullable: true
            type: string
            pattern: ^$|[a-zA-Z][a-z0-9A-Z \-]{2,128}$
        additionalProperties: false
    additionalProperties: false
    required:
    - body
  InternalUpdateResource:
    type: object
    description: Shape of request used to update a resource through an internal api
    properties:
      body:
        type: object
        properties:
          plan_id:
            $ref: '#/definitions/ID'
        additionalProperties: false
        required:
        - plan_id
    additionalProperties: false
    required:
    - body
  CreateCredential:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      type:
        type: string
        enum:
        - credential
      version:
        type: integer
        enum:
        - 1
      body:
        type: object
        properties:
          resource_id:
            $ref: '#/definitions/ID'
          values:
            type: object
            description: |
              Map of configuration variable names to values, names
              must IEEE 1003.1 - 2001 Standard (checked in code).
            additionalProperties:
              type: string
        additionalProperties: false
        required:
        - resource_id
        - values
    additionalProperties: false
    required:
    - id
    - type
    - version
    - body
  Credential:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      type:
        type: string
        enum:
        - credential
      version:
        type: integer
        enum:
        - 1
      body:
        type: object
        properties:
          resource_id:
            $ref: '#/definitions/ID'
          values:
            type: object
            description: |
              Map of configuration variable names to values, names
              must IEEE 1003.1 - 2001 Standard (checked in code).
            additionalProperties:
              type: string
          source:
            type: string
            enum:
            - catalog
            - custom
            default: catalog
          created_at:
            type: string
            format: datetime
          updated_at:
            type: string
            format: datetime
        additionalProperties: false
        required:
        - resource_id
        - values
        - source
        - created_at
        - updated_at
    additionalProperties: false
    required:
    - id
    - type
    - version
    - body
  ConfigPatch:
    type: object
    additionalProperties: true

  Project:
    type: object
    properties:
      id: { $ref: '#/definitions/ID' }
      type: { type: string, enum: ['project'] }
      version: { type: integer, enum: [1] }
      body:
        type: object
        properties:
          user_id: { $ref: '#/definitions/OptionalID' }
          team_id: { $ref: '#/definitions/OptionalID' }
          name: { $ref: '#/definitions/Name' }
          label: { $ref: '#/definitions/Label' }
          description: { type: string, minLength: 1, maxLength: 1000 }
        additionalProperties: false
        required:
          - name
          - label
    additionalProperties: false
    required:
      - id
      - type
      - version
      - body
  CreateProject:
    type: object
    properties:
      body:
        type: object
        properties:
          user_id: { $ref: '#/definitions/OptionalID' }
          team_id: { $ref: '#/definitions/OptionalID' }
          name: { $ref: '#/definitions/Name' }
          label: { $ref: '#/definitions/Label' }
          description: { type: string, minLength: 1, maxLength: 1000 }
        additionalProperties: false
        required:
          - name
          - label
    additionalProperties: false
    required:
      - body

  PublicUpdateProject:
    type: object
    description: Update project patch request
    properties:
      body:
        type: object
        properties:
          name: { $ref: '#/definitions/Name' }
          label: { $ref: '#/definitions/Label' }
          description:
            x-nullable: true
            type: string
            minLength: 1
            maxLength: 1000
        additionalProperties: false
    additionalProperties: false
    required:
      - body
