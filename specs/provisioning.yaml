swagger: "2.0"
info:
  title: Provisioning API
  description: |
    Request and monitor resource provisioning, deprovisioning, and resizing
    operations
  version: 1.0.0
host: api.provisioning.manifold.co
schemes:
- https
produces:
- application/json
consumes:
- application/json
securityDefinitions:
  jwtRequired:
    type: apiKey
    name: Authorization
    in: header
security:
- jwtRequired: []
parameters:
  callback_id:
    name: id
    in: path
    description: |
      ID of a Callback, stored as a base32 encoded 18 byte identifier.
    required: true
    type: string
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
responses:
  BadRequest:
    description: Request denied due to invalid request body, path, or headers.
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Request denied as the provided credentials are no longer valid.
    schema:
      $ref: '#/definitions/Error'
  NotFound:
    description: Request denied as the requested resource does not exist.
    schema:
      $ref: '#/definitions/Error'
  Internal:
    description: Request failed due to an internal server error.
    schema:
      $ref: '#/definitions/Error'
basePath: /v1
paths:
  /operations/:
    get:
      summary: Get a list of operations
      tags:
      - Operation
      parameters:
      - name: team_id
        in: query
        description: |
          ID of the Team to filter Resources by, stored as a
          base32encoded 18 byte identifier.
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
        required: false
      responses:
        200:
          description: A list of operations.
          schema:
            type: array
            items:
              $ref: '#/definitions/Operation'
        401:
          description: Invalid Auth Token
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /operations/{id}:
    put:
      summary: Create Operation
      description: Create an operation to provision, resize, or deprovision a resource.
      tags:
      - Operation
      parameters:
      - name: id
        in: path
        description: |
          ID of the Operation, stored as a base32 encoded 18 byte identifier.
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      - name: body
        in: body
        description: Operation creation request
        required: true
        schema:
          $ref: '#/definitions/Operation'
      responses:
        202:
          description: An operation to asynchronously watch the progress of a requested
            action.
          schema:
            $ref: '#/definitions/Operation'
        400:
          description: Bad Request Parameters
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Invalid Auth Token
          schema:
            $ref: '#/definitions/Error'
        400:
          description: Invalid Request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Another operation is being performed on this resource.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get an Operation
      description: Retrieve an operation based on its ID
      parameters:
      - name: id
        in: path
        description: |
          ID of the operation to lookup, stored as a base32 encoded 18 byte
          identifier.
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      tags:
      - Operation
      responses:
        200:
          description: An operation.
          schema:
            $ref: '#/definitions/Operation'
        400:
          description: Bad Request Parameters
          schema:
            $ref: '#/definitions/Error'
        404:
          description: No operation with the given ID exists.
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Invalid Auth Token
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  ID:
    type: string
    description: A base32 encoded 18 byte identifier.
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  OptionalID:
    type: string
    description: A base32 encoded 18 byte identifier.
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-nullable: true
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Callback:
    type: object
    description: |
      Current state of a callback
    properties:
      id:
        $ref: '#/definitions/ID'
      type:
        type: string
        enum:
        - callback
      version:
        type: integer
        enum:
        - 1
      body:
        type: object
        properties:
          operation_id:
            $ref: '#/definitions/ID'
          payload:
            $ref: '#/definitions/CallbackResponse'
  CallbackResponse:
    type: object
    description: |
      A callback sent from a provider to complete an asynchronous request.

      Credentials can only be specified *if* the callback corresponds with a
      credential provisioning request.
    properties:
      state:
        type: string
        enum:
        - done
        - error
      message:
        type: string
        minLength: 3
        maxLength: 256
      credentials:
        type: object
        additionalProperties:
          type: string
    additionalProperties: false
    required:
    - state
    - message
  OperationBody:
    discriminator: type
    type: object
    properties:
      type:
        type: string
        description: Type of operation this object represents
      user_id:
        $ref: '#/definitions/OptionalID'
        description: User owning the operation, cannot be supplied if team_id defined
      team_id:
        $ref: '#/definitions/OptionalID'
        description: Team owning the operation, cannot be supplied if user_id defined
      message:
        type: string
        description: A message associated with the operation to display to the user.
      created_at:
        type: string
        format: datetime
        description: A date time string representing the time the operation was created.
      updated_at:
        type: string
        format: datetime
        description: A date time string representing the time the operation was last
          updated.
    additionalProperties: false
    required:
    - type
    - message
    - created_at
    - updated_at

  provision:
    type: object
    allOf:
    - $ref: '#/definitions/OperationBody'
    - type: object
      properties:
        resource_id:
          $ref: '#/definitions/ID'
        state:
          description: State must be specified as creating on a PUT operation
          type: string
          enum:
          - provision
          - binding
          - billing
          - commit
          - error
          - done
        product_id:
          $ref: '#/definitions/OptionalID'
        plan_id:
          $ref: '#/definitions/OptionalID'
        region_id:
          $ref: '#/definitions/OptionalID'
        name:
          type: string
        label:
          type: string
        source:
          description: |
            The source of the resource to be created. If not provided,
            `marketplace` is assumed. Resources of type `custom` must omit
            the `product_id`, `plan_id`, and `region_id` fields. They must
            be included for `catalog` resources.
          type: string
          enum:
          - catalog
          - custom
          default: catalog
        app_name:
          description: Optional app name for resource grouping
          type: string
        project_id:
          $ref: '#/definitions/OptionalID'
          description: Project in which the operation is grouped.
      additionalProperties: false
      required:
      - state
      - name
      - label
      - source
      - resource_id

  transfer:
    type: object
    allOf:
      - { $ref: '#/definitions/OperationBody' }
      - type: object
        properties:
          resource_id: { $ref: '#/definitions/ID' }
          state:
            description: State must be specified as creating on a PUT operation
            type: string
            enum: ['transfer', 'billing', 'commit', 'error', 'done']
          new_owner_id: { $ref: '#/definitions/OptionalID' }
        additionalProperties: false
        required:
          - state
          - new_owner_id

  resize:
    type: object
    allOf:
    - $ref: '#/definitions/OperationBody'
    - type: object
      properties:
        resource_id:
          $ref: '#/definitions/ID'
        state:
          description: State must be specified as resize on a PUT operation
          type: string
          enum:
          - resize
          - billing
          - commit
          - error
          - done
        plan_id:
          $ref: '#/definitions/ID'
      additionalProperties: false
      required:
      - state
      - plan_id
      - resource_id
  move:
    type: object
    allOf:
    - $ref: '#/definitions/OperationBody'
    - type: object
      properties:
        resource_id:
          $ref: '#/definitions/ID'
        state:
          description: State must be specified as move on a PUT operation
          type: string
          enum:
          - move
          - commit
          - error
          - done
        project_id:
          $ref: '#/definitions/OptionalID'
          description: |
            The new project for this resource. If `null`, remove
            any existing project from this resource.
      additionalProperties: false
      required:
      - state
      - project_id
      - resource_id
  deprovision:
    type: object
    allOf:
    - $ref: '#/definitions/OperationBody'
    - type: object
      properties:
        resource_id:
          $ref: '#/definitions/ID'
        state:
          description: State must be specified as deprovision on a PUT operation.
          type: string
          enum:
          - deprovision
          - billing
          - commit
          - error
          - done
      additionalProperties: false
      required:
      - state
      - resource_id
  project_delete:
    type: object
    allOf:
    - $ref: '#/definitions/OperationBody'
    - type: object
      properties:
        project_id:
          $ref: '#/definitions/ID'
          description: |
            The the project to delete.
        state:
          description: State must be specified as delete on a PUT operation
          type: string
          enum:
          - delete
          - commit
          - error
          - done
      additionalProperties: false
      required:
      - state
      - project_id
  Operation:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      type:
        type: string
        enum:
        - operation
      version:
        type: integer
        enum:
        - 1
      body:
        $ref: '#/definitions/OperationBody'
    additionalProperties: false
    required:
    - id
    - type
    - version
    - body
  Error:
    type: object
    properties:
      type:
        type: string
        enum:
        - bad_request
        - unauthorized
        - not_found
        - conflict
        - internal
        description: The error type
      message:
        type: array
        description: Explanation of the errors
        items:
          type: string
    x-go-type:
      type: Error
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
